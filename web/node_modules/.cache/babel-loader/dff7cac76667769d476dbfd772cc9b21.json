{"ast":null,"code":"import _slicedToArray from \"D:\\\\Meus Documentos\\\\Rocketseat\\\\semanaomnistack10\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Meus Documentos\\\\Rocketseat\\\\semanaomnistack10\\\\web\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; // Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n// Propiedade: Informaçoes que um componente PAI passa para o componeete FILHO\n// Estado: Informaçoes Mantidas pelo componente (Lembrar: imutabilidade)\n\nfunction App() {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  function incrementCounter() {\n    setCounter(counter + 1);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Contador: \", counter), React.createElement(\"button\", {\n    onClick: incrementCounter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Incrementar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Meus Documentos/Rocketseat/semanaomnistack10/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementCounter"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAEA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACiBD,QAAQ,CAAC,CAAD,CADzB;AAAA;AAAA,QACNE,OADM;AAAA,QACGC,UADH;;AAGb,WAASC,gBAAT,GAA2B;AACzBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;;AAED,SACE,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,OAAf,CADA,EAEA;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADF;AAMD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\n\n// Componente: Bloco isolado de HTML, CSS e JS, o qual não interfere no restante da aplicação\n// Propiedade: Informaçoes que um componente PAI passa para o componeete FILHO\n// Estado: Informaçoes Mantidas pelo componente (Lembrar: imutabilidade)\n\nfunction App() {\n  const [counter, setCounter] = useState(0);\n\n  function incrementCounter(){\n    setCounter(counter + 1);\n  }\n\n  return (\n    <>\n    <h1>Contador: {counter}</h1>\n    <button onClick={incrementCounter}>Incrementar</button>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}